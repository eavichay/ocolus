(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.oculusx=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){const registeredObservables=new WeakMap;const noOp=()=>noOp;const deadObservableExecution=function(){throw new Error("Cannot watch a non-registered object")};function destroy(target){const meta=registeredObservables.get(target);registeredObservables.delete(target);if(meta){meta.observe=deadObservableExecution;meta.observers.clear();meta.values={};return meta.unobserve}return noOp}function convert(target){let metadata=registeredObservables.get(target);if(metadata){return metadata}else{metadata={observers:new Map,observe:undefined,unobserve:undefined,values:{}}}const{observers:observers,values:values}=metadata;const unobserve=(path,callback)=>{if(typeof path==="undefined"){return destroy(target)}else if(path){const chain=path.split(".");const[prop]=chain;const set=observers.get(path);if(set){if(callback){set.delete(callback)}else{set.clear()}const nextInChain=target[prop];if(typeof nextInChain==="object"){const observeMethods=registeredObservables.get(nextInChain);if(observeMethods){const{unobserve:unobserve}=observeMethods;const path=chain.slice(1).join(".");if(path&&unobserve!==deadObservableExecution){unobserve(path,callback)}}}if(set.size===0){observers.delete(path)}}}return unobserve};const observe=(path,callback,invoke)=>{if(!registeredObservables.has(target)){deadObservableExecution()}const chain=path.split(".");const[prop]=chain;const isNew=!observers.has(prop);let callbacks=observers.get(path);if(!callbacks){callbacks=new Set;observers.set(path,callbacks)}callbacks.add(callback);if(isNew){const initialValue=target[prop];if(typeof initialValue==="object"){const{observe:observe}=convert(initialValue);Array.from(observers.entries()).forEach(([path,set])=>{if(path.startsWith(prop+".")){set.forEach(cb=>observe(path.split(".").slice(1).join("."),cb,invoke))}})}values[prop]=initialValue;typeof target==="object"&&Object.defineProperty(target,prop,{get(){return values[prop]},set(v){values[prop]=v;const set=observers.get(prop);set&&set.forEach(cb=>cb(v,prop));if(typeof v==="object"){const{observe:observe}=convert(v);Array.from(observers.entries()).forEach(([path,set])=>{if(path.startsWith(prop+".")){set.forEach(cb=>observe(path.split(".").slice(1).join("."),cb,true))}})}},configurable:true})}if(invoke){const set=observers.get(prop);set&&set.forEach(cb=>cb(values[prop],prop))}return observe};metadata.observe=observe;metadata.unobserve=unobserve;metadata.values=values;registeredObservables.set(target,metadata);return metadata}module.exports={convert:convert,destroy:destroy}},{}],2:[function(require,module,exports){const{watch:watch}=require("./watch");const{unwatch:unwatch}=require("./unwatch");module.exports={watch:watch,unwatch:unwatch}},{"./unwatch":3,"./watch":4}],3:[function(require,module,exports){const{convert:convert,destroy:destroy}=require("./convert");module.exports={unwatch:(target,path,callback)=>{if(!path){return destroy(target)}const{unobserve:unobserve}=convert(target);return unobserve(path,callback)}}},{"./convert":1}],4:[function(require,module,exports){const{convert:convert}=require("./convert");module.exports={watch:(target,path=undefined,callback=undefined,invoke=false)=>{const{observe:observe}=convert(target);if(path&&callback){observe(path,callback,invoke)}return observe}}},{"./convert":1}]},{},[2])(2)});
//# sourceMappingURL=true